import { Component, OnInit, ViewEncapsulation } from '@angular/core';
import { WebSocketService } from '../services/web-socket.service';
import { SalesOrderData } from '../data-models/sales-order-data';
import {MenuItem} from 'primeng/primeng';
import {Message} from 'primeng/primeng';


declare var $: any;

@Component({
  selector: 'mtrack-container',
  templateUrl: './m-track-container.component.html',
  encapsulation: ViewEncapsulation.None,
  styleUrls: ['./m-track-container.component.scss']
})
export class MobileTrackContainerComponent implements OnInit {
private items: MenuItem[];
msgs: Message[] = [];
activeIndex: string = 'C';
private dummyData:number[] = [1,2,3,4,5,6,7,8,9,10];
private containerNumber : string ='';
private salesOrderData: SalesOrderData = new SalesOrderData();
private salesOrderNo: number = -1;
private containerArray: any[] = [];


  constructor(){
	console.log("Inside MobileTrackContainersComponent");
        
        this.containerNumber = sessionStorage.getItem('containerNumber'); // name is the key
        console.log("$$$$$$$containerNumber",this.containerNumber);
        WebSocketService.getInstance().salesOrderDataBehaviorSubject.subscribe(data => this.showSalesOrderData(data));
  }

  ngOnInit() {
//      if(this.containerNumber == this.containerArray.){
//          console.log("Inside MobileTrackContainerComponent : ngOnInit");
//      }
this.items = [{
                label: 'Created',
            items: [
                {label: 'New', icon: 'fa-plus'},
                {label: 'Open', icon: 'fa-download'}
            ]
            }
//            {
//                label: 'Booked',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Seat Selection', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Packed',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Pay with CC', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Manifested',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Last Step', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Sailed',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Last Step', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Doc. Rec',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Last Step', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Vess Arrived',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Last Step', detail: event.item.label});
//                }
//            },
//            {
//                label: 'Released',
//                command: (event: any) => {
//                    this.activeIndex = 'C';
//                    this.msgs.length = 0;
//                    this.msgs.push({severity:'info', summary:'Last Step', detail: event.item.label});
//                }
//            }
//            
        ];
  }
  
      showSalesOrderData(data){
        console.log("MobileTrackContainerComponent: showSalesOrderData()", data);
        if (data == null || data == "" || data == undefined) {
            console.log("*************: ", this.containerArray);
            this.salesOrderData = new SalesOrderData();
            
        } else {
            this.salesOrderData = data;
            this.containerArray = this.salesOrderData.containers;
            console.log("*************: ", this.containerArray);
        }
    }
}
